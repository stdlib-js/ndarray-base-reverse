{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar args2multislice = require( '@stdlib/slice-base-args2multislice' );\nvar Slice = require( '@stdlib/slice-ctor' );\nvar filled = require( '@stdlib/array-base-filled' );\nvar slice = require( '@stdlib/ndarray-base-slice' );\nvar ndims = require( '@stdlib/ndarray-base-ndims' );\n\n\n// MAIN //\n\n/**\n* Returns a view of an input ndarray in which the order of elements along each dimension is reversed.\n*\n* @param {ndarray} x - input array\n* @param {boolean} writable - boolean indicating whether a returned array should be writable\n* @returns {ndarray} ndarray view\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var y = reverse( x, false );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 3, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 6.0, 5.0 ], [ 4.0, 3.0 ], [ 2.0, 1.0 ] ]\n*/\nfunction reverse( x, writable ) {\n\tvar args = filled( new Slice( null, null, -1 ), ndims( x ) );\n\treturn slice( x, args2multislice( args ), true, writable );\n}\n\n\n// EXPORTS //\n\nmodule.exports = reverse;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a view of an input ndarray in which the order of elements along each dimension is reversed.\n*\n* @module @stdlib/ndarray-base-reverse\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n* var reverse = require( '@stdlib/ndarray-base-reverse' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var y = reverse( x, false );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 3, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 6.0, 5.0 ], [ 4.0, 3.0 ], [ 2.0, 1.0 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAkB,QAAS,oCAAqC,EAChEC,EAAQ,QAAS,oBAAqB,EACtCC,EAAS,QAAS,2BAA4B,EAC9CC,EAAQ,QAAS,4BAA6B,EAC9CC,EAAQ,QAAS,4BAA6B,EAuClD,SAASC,EAASC,EAAGC,EAAW,CAC/B,IAAIC,EAAON,EAAQ,IAAID,EAAO,KAAM,KAAM,EAAG,EAAGG,EAAOE,CAAE,CAAE,EAC3D,OAAOH,EAAOG,EAAGN,EAAiBQ,CAAK,EAAG,GAAMD,CAAS,CAC1D,CAKAR,EAAO,QAAUM,ICjBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "args2multislice", "Slice", "filled", "slice", "ndims", "reverse", "x", "writable", "args", "main"]
}
